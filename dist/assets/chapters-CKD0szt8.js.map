{"version":3,"file":"chapters-CKD0szt8.js","sources":["../../src/chapters.js"],"sourcesContent":["import * as THREE from 'three'\ngsap.registerPlugin(ScrollTrigger);\n\n/**\n * Base\n */\n// Canvas\n// const canvas = document.querySelector('canvas.webgl')\nconst $container = document.querySelector(\"[data-select='container']\");\nconst $canvas = document.querySelector(\"[data-select='canvas']\");\n\n// Scene\nconst scene = new THREE.Scene()\n\n// Sections\nconst contents = gsap.utils.toArray(\"#horizontal .content\");\nconst dots = document.querySelectorAll('.dot');\n\nconst state = {\n    scroll: {\n      position: 0,\n      intensity: 0,\n      lerped: {\n        current: 0,\n        previous: 0,\n      },\n    },\n    dimensions: {\n      width: $container.offsetWidth,\n      height: $container.offsetHeight,\n    },\n  };\n\n/**\n * Textures\n */\nconst textureLoader = new THREE.TextureLoader()\nconst particleTexture = textureLoader.load('./textures/particles/1.png')\n\n\n/**\n * Particles\n */\n\n// Geometry\nconst starGeometry = new THREE.BufferGeometry()\nconst particlesCount = 2000\n\nconst positions = new Float32Array(particlesCount * 3) // Multiply by 3 because each position is composed of 3 values (x, y, z)\nconst colors = new Float32Array(particlesCount * 3)\n\nconst colorChoices = [\n  new THREE.Color('#D5BDBD'), \n  new THREE.Color('#E4E0DB'), \n  new THREE.Color('#E4E0DB') \n]\n\nfor(let i = 0; i < particlesCount * 3; i++) \n{\n    positions[i * 3 + 0] = (Math.random() - 0.5) * 200\n    positions[i * 3 + 1] = (Math.random() - 0.5) * 200\n    positions[i * 3 + 2] = (Math.random() - 0.5) * 200\n\n    const pickedColor = colorChoices[Math.floor(Math.random() * colorChoices.length)]\n\n    colors[i * 3 + 0] = pickedColor.r\n    colors[i * 3 + 1] = pickedColor.g\n    colors[i * 3 + 2] = pickedColor.b\n}\n\nstarGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3)) \nstarGeometry.setAttribute('color', new THREE.BufferAttribute(colors, 3))\n\n\n// Material\nconst starMaterial = new THREE.PointsMaterial({\n    size: 0.5,\n    sizeAttenuation: true,\n    transparent : true,\n    alphaMap : particleTexture,\n    alphaTest : 0.001,\n    blending: THREE.NormalBlending,\n    depthWrite: false,\n    vertexColors: true\n})\n\n//Points\n// const particles = new THREE.Points(starGeometry, starMaterial)\n// scene.add(particles)\n  \n\nconst trail = [];\n\nfor (let i = 0; i < 100; i++) {\n  trail[i] = new THREE.Points(starGeometry, starMaterial);\n  scene.add(trail[i]);\n}\n\n\n/**\n *\n * Wheel\n */\nconst handleWheel = (event) => {\n    event.preventDefault(); // Prevent normal vertical scrolling\n    state.scroll.position -= event.deltaY * 0.05;\n    };\n  \n    document.addEventListener('wheel', handleWheel);\n\n/**\n * Sizes\n */\nconst sizes = {\n    width: window.innerWidth,\n    height: window.innerHeight\n}\n\nwindow.addEventListener('resize', () =>\n{\n    // Update sizes\n    sizes.width = window.innerWidth\n    sizes.height = window.innerHeight\n\n    // Update camera\n    camera.aspect = sizes.width / sizes.height\n    camera.updateProjectionMatrix()\n\n    // Update renderer\n    renderer.setSize(sizes.width, sizes.height)\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n})\n\n/**\n * Camera\n */\n// Base camera\nconst camera = new THREE.PerspectiveCamera(35, sizes.width / sizes.height, 0.1, 100)\ncamera.position.z = 3\nscene.add(camera)\n\n /**\n * Renderer\n */\nconst renderer = new THREE.WebGLRenderer({\n    canvas: $canvas,\n    alpha: true\n})\nrenderer.setSize(sizes.width, sizes.height)\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n\n/**\n * Scroll\n */\n\n// Horizontal Scroll Animation\nconst horizontalScroll = gsap.to(contents, {\n    xPercent: -100 * (contents.length - 1),\n    ease: \"none\",\n    scrollTrigger: {\n        trigger: \"#horizontal\",\n        pin: true,\n        scrub: 1,\n        snap: 1 / (contents.length - 1),\n        end: () => \"+=\" + document.querySelector(\"#horizontal\").offsetWidth,\n        onUpdate: self => {\n            const progress = self.progress;\n            const index = Math.round(progress * (contents.length - 1));\n\n            dots.forEach((dot, i) => {\n                dot.classList.toggle('active', i === index);\n            });\n        }\n    }\n});\n\n/**\n * Animate\n */\nconst handleTick = () => {\n    state.scroll.lerped.previous = state.scroll.lerped.current;\n    state.scroll.lerped.current = gsap.utils.interpolate(\n      state.scroll.lerped.current,\n      state.scroll.position,\n      0.1\n    );\n  \n    state.scroll.intensity = Math.abs(\n      state.scroll.lerped.previous - state.scroll.lerped.current\n    );\n  \n    // Move the entire trail (optional, based on intensity)\n    for (let index = 0; index < 100; index++) {\n      trail[index].position.x = index * 0.1 * state.scroll.intensity;\n    }\n  \n    // Move camera horizontally \n    camera.position.x = -state.scroll.lerped.current;\n  \n  \n    renderer.render(scene, camera);\n  };\n  \n    \ngsap.ticker.add(handleTick);"],"names":["$container","$canvas","scene","THREE.Scene","contents","dots","state","textureLoader","THREE.TextureLoader","particleTexture","starGeometry","THREE.BufferGeometry","particlesCount","positions","colors","colorChoices","THREE.Color","i","pickedColor","THREE.BufferAttribute","starMaterial","THREE.PointsMaterial","THREE.NormalBlending","trail","THREE.Points","handleWheel","event","sizes","camera","renderer","THREE.PerspectiveCamera","THREE.WebGLRenderer","self","progress","index","dot","handleTick"],"mappings":"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"}